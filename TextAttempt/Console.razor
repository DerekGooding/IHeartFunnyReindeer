@inject IJSRuntime JSRuntime
@using System.Timers
@using IHeartFunnyReindeer.Services

<div class="console-container">
    <div class="console-output" @ref="consoleOutputRef">
        @foreach (var line in ConsoleService.ColoredLines)
        {
            <div class="console-line">
                @foreach (var segment in line)
                {
                    <span style="color: @segment.Color">@segment.Text</span>
                }
            </div>
        }
    </div>
    <input @bind="ConsoleService.UserInput" @bind:event="oninput" @onkeydown="HandleKeyDown" 
    placeholder="Enter command..." class="console-input" />
</div>

@code {
    [Inject]
    private ConsoleService ConsoleService { get; set; }

    [Inject]
    private ColorService ColorService { get; set; }

    public Console(ConsoleService consoleService, ColorService colorService)
    {
        ConsoleService = consoleService;
        ColorService = colorService;
    }

    private ElementReference consoleOutputRef;

    private async void HandleKeyDown(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            ConsoleService?.ProcessInput();

            if(ConsoleService?.Shake == true)
                await TriggerShakeAsync();
        }
    }

    private async Task TriggerShakeAsync() => await JSRuntime.InvokeVoidAsync("shakeElement", consoleOutputRef);

    private async Task ScrollToBottomAsync() => await JSRuntime.InvokeVoidAsync("scrollToBottom", consoleOutputRef);
}